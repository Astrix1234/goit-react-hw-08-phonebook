{"version":3,"file":"static/js/488.3b0ddb24.chunk.js","mappings":"qOACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAmI,6BAAnI,EAAgL,oC,6BCM1KA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KACHE,IAAI,EAAG,wBACPC,IAAI,GAAI,yBACRC,SAAS,aACZC,MAAOL,EAAAA,KAAaK,MAAM,wBAAwBD,SAAS,aAC3DE,SAAUN,EAAAA,KAAaE,IAAI,EAAG,wBAAwBE,SAAS,eAGpDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZP,iBAAkBA,EAClBc,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAASD,GACpB,IAGF,OACEE,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUL,SAAUH,EAAOS,aAAaC,SAAA,EACvDJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEC,YAAY,eACZL,UAAWC,EACXK,KAAK,OACLtB,KAAK,OACLuB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOI,OAAOb,KACrB0B,OAAQjB,EAAOkB,aAEhBlB,EAAOmB,QAAQ5B,MAAQS,EAAOoB,OAAO7B,MACpCoB,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAkBE,SAAEV,EAAOoB,OAAO7B,OAChD,SAENe,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SACEC,YAAY,kBACZL,UAAWC,EACXK,KAAK,QACLtB,KAAK,QACLuB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOI,OAAOT,MACrBsB,OAAQjB,EAAOkB,aAEhBlB,EAAOmB,QAAQxB,OAASK,EAAOoB,OAAOzB,OACrCgB,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAkBE,SAAEV,EAAOoB,OAAOzB,QAChD,SAENW,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUE,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEU,MAAM,uBACNd,UAAWC,EACXK,KAAK,WACLtB,KAAK,WACLuB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOI,OAAOR,SACrBqB,OAAQjB,EAAOkB,aAEhBlB,EAAOmB,QAAQvB,UAAYI,EAAOoB,OAAOxB,UACxCe,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAkBE,SAAEV,EAAOoB,OAAOxB,WAChD,SAENe,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAYK,KAAK,SAAQH,SAAC,eAKnD,EChFMY,EAAS,CACbC,UAAW,CACTC,UAAW,QACXC,QAAS,SAIE,SAASC,IACtB,OACEpB,EAAAA,EAAAA,MAAA,OAAKqB,MAAOL,EAAOC,UAAUb,SAAA,EAC3BC,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAAAlB,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACd,EAAY,MAGnB,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\",\"formikMessage\":\"RegisterForm_formikMessage__rt7hx\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(2, 'Minimum 2 characters')\n    .max(25, 'Maximum 25 characters')\n    .required('Required!'),\n  email: Yup.string().email('Invalid email format').required('Required!'),\n  password: Yup.string().min(7, 'Minimum 7 characters').required('Required!'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(register(values));\n    },\n  });\n\n  return (\n    <form className={css.form} onSubmit={formik.handleSubmit}>\n      <label className={css.label}>\n        Username\n        <input\n          placeholder=\"Adrian Cross\"\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.name && formik.errors.name ? (\n          <div className={css.formikMessage}>{formik.errors.name}</div>\n        ) : null}\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          placeholder=\"across@mail.com\"\n          className={css.input}\n          type=\"email\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div className={css.formikMessage}>{formik.errors.email}</div>\n        ) : null}\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          title=\"Minimum 7 characters\"\n          className={css.input}\n          type=\"password\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div className={css.formikMessage}>{formik.errors.password}</div>\n        ) : null}\n      </label>\n      <button className={css.button} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst styles = {\n  container: {\n    minHeight: '100vh',\n    display: 'flex',\n  },\n};\n\nexport default function RegisterPage() {\n  return (\n    <div style={styles.container}>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["validationSchema","Yup","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","_jsxs","className","css","handleSubmit","children","_jsx","placeholder","type","onChange","handleChange","value","onBlur","handleBlur","touched","errors","title","styles","container","minHeight","display","RegisterPage","style","Helmet"],"sourceRoot":""}